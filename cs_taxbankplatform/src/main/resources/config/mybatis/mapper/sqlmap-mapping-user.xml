<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dcits.govsbu.sd.taxbankplatform.user.mapper.UserMapper">
	<!--mybatis ehcache缓存配置,以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 -->
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/> 
	<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/> -->

	<sql id="userAttributes">
		u_id,
		u_name,
		u_account_name,
		u_password,
		region_id,
		org_id,
		u_delete_status,
		u_locked,
		u_description,
		u_credentials_salt,
		u_creator_id,
		u_creator_name,
		u_create_time,
		u_update_time
	</sql>

	<sql id="userInfoAttributes">
		u_id,
		u_sex,
		u_birthday,
		u_telephone,
		u_email,
		u_address,
		u_create_time
	</sql>

	<resultMap id="userMap" type="com.dcits.govsbu.sd.taxbankplatform.user.model.UserEntity">
		<id property="id" column="u_id"/>
		<result property="userName" column="u_name" />
		<result property="accountName" column="u_account_name"/>
		<result property="password" column="u_password"/>
		<result property="regionid" column="region_id"/>
		<result property="orgid" column="org_id"/>
		<result property="deleteStatus" column="u_delete_status"/>
		<result property="locked" column="u_locked"/>
		<result property="description" column="u_description"/>
		<result property="credentialsSalt" column="u_credentials_salt"/>
		<result property="creatorId" column="u_creator_id"/>
		<result property="creatorName" column="u_creator_name"/>
		<result property="createTime" column="u_create_time"/>
		<result property="updateTime" column="u_update_time"/>
		<result property="ssswjDm" column="ssswj_dm"/>
		<association property="organizationEntity" column="id" javaType="com.dcits.govsbu.sd.taxbankplatform.organization.model.OrganizationEntity">
			<result property="orgname" column="org_name"/>
			<result property="orgcode" column="org_code"/>
			<result property="otid" column="ot_id"/>
			<result property="rcid" column="rc_id"  />
		</association>
		<association property="regionsEntity" column="id" javaType="com.dcits.govsbu.sd.taxbankplatform.regions.model.RegionsEntity" > 
			<result property="regionname" column="region_name"/>
			<result property="regioncode" column="region_code"/>
		</association>
		<association property="role" column="id" javaType="com.dcits.govsbu.sd.taxbankplatform.role.model.RoleEntity">
			<id property="id" column="r_id"/>
			<result property="name" column="r_name"/>
			<result property="key" column="r_key"/>
			<result property="status" column="r_status"/>
			<result property="description" column="r_description"/>
			<result property="createTime" column="r_create_time"/>
			<result property="updateTime" column="r_update_time"/>
		</association>
		<association property="userInfo" column="id" javaType="com.dcits.govsbu.sd.taxbankplatform.user.model.UserInfoEntity">
			<id property="id" column="u_id"/>
			<result property="sex" column="u_sex"/>
			<result property="birthday" column="u_birthday"/>
			<result property="telephone" column="u_telephone"/>
			<result property="email" column="u_email"/>
			<result property="address" column="u_address"/>
			<result property="createTime" column="u_create_time"/>
		</association>
	</resultMap>
	
	<select id="queryListByPage" parameterType="map" resultMap="userMap" flushCache="true" useCache="true">
		SELECT 
		reg.region_name,
		reg.region_code,
		u.region_id,
		org.org_name,
		u.org_id,
		org.org_code,
		org.ot_id,
		org.rc_id,
		u.u_id,
		u.u_name,
		u.u_account_name,
		u.u_password,
		u.u_delete_status,
		u.u_locked,
		u.u_description,
		u.u_credentials_salt,
		u.u_creator_id,
		u.u_creator_name,
		u.u_create_time,
		u.u_update_time,
		(select j.swj_mc from tb_data_swj_dm j where j.tb_swj_dm = u.ssswj_dm) as ssswj_dm ,
		r.r_id,
		r.r_name,
		r.r_key,
		r.r_status,
		r.r_description,
		r.r_create_time,
		r.r_update_time
		FROM tb_user u LEFT JOIN tb_organizations org ON u.org_id = org.org_id
		LEFT JOIN tb_regions reg ON org.region_id = reg.region_id
		LEFT JOIN tb_role_user ru ON u.u_id = ru.u_id LEFT JOIN tb_role r ON ru.r_id = r.r_id
		<where>
			<if test="regionid != null and regionid != ''">
				and u.region_id=#{regionid}
			</if>
			<if test="orgid != null and orgid != ''">
				and u.org_id=#{orgid}
			</if>
			<if test="userName != null and userName != ''">
				u.u_name like CONCAT('%',#{userName},'%') or u.u_account_name like CONCAT('%',#{userName},'%')
			</if>		
		</where>
	</select>
	
	<select id="findByName" parameterType="String" resultMap="userMap" flushCache="true" useCache="true">
		<!-- SELECT u.u_id,
		u.u_name,
		u.u_account_name,
		u.u_password,
		u.region_id,
		u.org_id,
		u.u_delete_status,
		u.u_locked,
		u.u_description,
		u.u_credentials_salt,
		u.u_group_name,
		u.u_region_id,
		u.u_creator_id,
		u.u_creator_name,
		u.u_create_time,
		u.u_update_time,
		r.r_id,
		r.r_name,
		r.r_key,
		r.r_status,
		r.r_description,
		r.r_create_time,
		r.r_update_time
		FROM tb_user u JOIN tb_role_user ru ON u.u_id = ru.u_id JOIN tb_role r ON ru.r_id = r.r_id  -->
		SELECT 
		reg.region_name,
		reg.region_code,
		u.region_id,
		org.org_name,
		u.org_id,
		org.org_code,
		org.ot_id,
		org.rc_id,
		u.u_id,
		u.u_name,
		u.u_account_name,
		u.u_password,
		u.u_delete_status,
		u.u_locked,
		u.u_description,
		u.u_credentials_salt,
		u.u_creator_id,
		u.u_creator_name,
		u.u_create_time,
		u.u_update_time,
		u.ssswj_dm,
		r.r_id,
		r.r_name,
		r.r_key,
		r.r_status,
		r.r_description,
		r.r_create_time,
		r.r_update_time
		FROM tb_user u LEFT JOIN tb_organizations org ON u.org_id = org.org_id
		LEFT JOIN tb_regions reg ON org.region_id = reg.region_id
		LEFT JOIN tb_role_user ru ON u.u_id = ru.u_id LEFT JOIN tb_role r ON ru.r_id = r.r_id
		where u.u_account_name = #{name}
	</select>
	
	<select id="findById" parameterType="String" resultMap="userMap" flushCache="true" useCache="true">
		SELECT 
		reg.region_name,
		reg.region_code,
		u.region_id,
		org.org_name,
		u.org_id,
		org.org_code,
		org.ot_id,
		org.rc_id,
		u.u_id,
		u.u_name,
		u.u_account_name,
		u.u_password,
		u.u_delete_status,
		u.u_locked,
		u.u_description,
		u.u_credentials_salt,
		u.u_creator_id,
		u.u_creator_name,
		u.u_create_time,
		u.u_update_time,
		u.ssswj_dm,
		r.r_id,
		r.r_name,
		r.r_key,
		r.r_status,
		r.r_description,
		r.r_create_time,
		r.r_update_time,
		i.u_sex,
		i.u_birthday,
		i.u_telephone,
		i.u_email,
		i.u_address
		FROM tb_user u LEFT JOIN tb_organizations org ON u.org_id = org.org_id
		LEFT JOIN tb_regions reg ON org.region_id = reg.region_id
		LEFT JOIN tb_role_user ru ON u.u_id = ru.u_id LEFT JOIN tb_role r ON ru.r_id = r.r_id JOIN tb_user_info i ON u.u_id = i.u_id
		where u.u_id = #{id}
	</select>
	
	
	
	<select id="getSwjdm"  resultType="map"  >
		SELECT 
		 t.tb_swj_dm,t.swj_mc
		FROM   tb_data_swj_dm t
	</select>
	
	
	<insert id="insert" parameterType="com.dcits.govsbu.sd.taxbankplatform.user.model.UserEntity" useGeneratedKeys="true" keyProperty="id">
		insert ignore into tb_user (
			u_id,
			u_name,
			u_account_name,
			u_password,
			org_id,
			region_id,
			u_description,
			u_credentials_salt,
			u_creator_id,
			u_creator_name,
			ssswj_dm,
			u_create_time
			)   
		values (
			#{u_id},
			#{userName},
			#{accountName},
			#{password},
			#{orgid},
			#{regionid},
			#{description},
			#{credentialsSalt},
			#{creatorId},
			#{creatorName},
			#{ssswjDm},
			#{createTime}
			)  
	</insert>
	
	<insert id="insertUserRole" parameterType="com.dcits.govsbu.sd.taxbankplatform.user.model.UserEntity">
		insert ignore into tb_role_user (
			id,
			u_id,
			r_id,
			t_create_time
			)   
		values (
			#{id},
			#{u_id},
			#{role.id},
			 date_format(now(), '%Y-%m-%d %H:%i:%s')
			)  
	</insert>
	
	<update id="update" parameterType="com.dcits.govsbu.sd.taxbankplatform.user.model.UserEntity" flushCache="true">
		update tb_user
		<set>
				u_name = #{userName},
			<if test="password != null and password != ''">
				u_password = #{password},
			</if>
			<if test="regionid != null and regionid != ''">
				region_id = #{regionid},
			</if>
			<if test="orgid != null and orgid != ''">
				org_id = #{orgid},
			</if>
			<if test="credentialsSalt != null and credentialsSalt != ''">
				u_credentials_salt = #{credentialsSalt},
			</if>
			<if test="description != null and description != ''">
				u_description = #{description},
			</if>
			<if test="creatorId != null and creatorId != ''">
				u_creator_id = #{creatorId},
			</if>
			<if test="creatorName != null and creatorName != ''">
				u_creator_name = #{creatorName},
			</if>
			<if test="deleteStatus != null">
				u_delete_status = #{deleteStatus},
			</if>
			<if test="locked != null">
				u_locked = #{locked},
			</if>
			<if test="ssswjDm != null">
				ssswj_dm = #{ssswjDm},
			</if>
		</set>
		where u_id = #{id}
	</update>
	
	<update id="updateUserRole" parameterType="com.dcits.govsbu.sd.taxbankplatform.user.model.UserEntity" flushCache="true">
		update tb_role_user
		set r_id = #{role.id}
		where u_id = #{id}
	</update>
	
	<delete id="deleteBatchById" parameterType="list">
		<![CDATA[  
       delete from tb_user where u_id in  
    	]]>  
	    <foreach collection="list" item = "id" open="(" separator="," close=")">
	    #{id}  
	    </foreach>  
	</delete>
	
	<delete id="deleteBatchUserRole" parameterType="list">
		<![CDATA[  
       delete from tb_role_user where u_id in  
    	]]>  
	    <foreach collection="list" item = "id" open="(" separator="," close=")">
	    #{id}  
	    </foreach>  
	</delete>
	
	
	<insert id="insertUserInfo" parameterType="com.dcits.govsbu.sd.taxbankplatform.user.model.UserEntity">
		insert ignore into tb_user_info (
			<include refid="userInfoAttributes"/>
			) 
		values (
			#{userInfo.id},
			#{userInfo.sex},
			#{userInfo.birthday},
			#{userInfo.telephone},
			#{userInfo.email},
			#{userInfo.address},
			#{userInfo.createTime}
			)  
	</insert>
	
	
	<update id="updateUserInfo" parameterType="com.dcits.govsbu.sd.taxbankplatform.user.model.UserEntity" flushCache="true">
		update tb_user_info set
		u_sex = #{userInfo.sex},
		u_birthday = #{userInfo.birthday},
		u_telephone = #{userInfo.telephone},
		u_email = #{userInfo.email},
		u_address = #{userInfo.address}
		where u_id = #{userInfo.id}
	</update>
	
</mapper>