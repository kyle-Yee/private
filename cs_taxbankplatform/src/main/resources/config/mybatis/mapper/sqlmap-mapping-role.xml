<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dcits.govsbu.sd.taxbankplatform.role.mapper.RoleMapper">
	<!--mybatis ehcache缓存配置,以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 -->
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/> 
	<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/> -->

	<sql id="roleAttributes">
		r_id,
		org_id,
		region_id,
		r_name,
		r_key,
		r_status,
		r_description,
		u_id,
		r_create_time,
		r_update_time
	</sql>

	<resultMap id="roleMap" type="com.dcits.govsbu.sd.taxbankplatform.role.model.RoleEntity">
		<id property="id" column="r_id"/>
		<result property="orgid" column="org_id"/>
		<result property="regionid" column="region_id"/>
		<result property="name" column="r_name"/>
		<result property="key" column="r_key"/>
		<result property="status" column="r_status"/>
		<result property="description" column="r_description"/>
		<result property="createUid" column="u_id"/>
		<result property="createTime" column="r_create_time"/>
		<result property="updateTime" column="r_update_time"/>
		<association property="organizationEntity" column="id" javaType="com.dcits.govsbu.sd.taxbankplatform.organization.model.OrganizationEntity">
			<result property="orgname" column="org_name"/>
			<result property="orgcode" column="org_code"/>
		</association>
		<association property="regionsEntity" column="id" javaType="com.dcits.govsbu.sd.taxbankplatform.regions.model.RegionsEntity" > 
			<result property="regionname" column="region_name"/>
		</association>
		<collection property="userList" column="id" ofType="com.dcits.govsbu.sd.taxbankplatform.user.model.UserEntity">
			<id property="id" column="u_id"/>
			<result property="userName" column="u_name" />
			<result property="accountName" column="u_account_name"/>
			<result property="password" column="u_password"/>
			<result property="deleteStatus" column="u_delete_status"/>
			<result property="locked" column="u_locked"/>
			<result property="description" column="u_description"/>
			<result property="credentialsSalt" column="u_credentials_salt"/>
			<result property="creatorName" column="u_creator_name"/>
			<result property="createTime" column="u_create_time"/>
			<result property="updateTime" column="u_update_time"/>
		</collection>
	</resultMap>
	
	<select id="queryListByPage" parameterType="map" resultMap="roleMap" flushCache="true" useCache="true">
		SELECT 
		reg.region_name,
		r.region_id,
		org.org_name,
		r.org_id,
		org.org_code,
		r.r_id,
		r.r_name,
		r.r_key,
		r.r_status,
		r.r_description,
		r.u_id,
		r.r_create_time,
		r.r_update_time,
		u.u_name,
		u.u_account_name,
		u.u_password,
		u.u_delete_status,
		u.u_locked,
		u.u_description,
		u.u_credentials_salt,
		u.u_creator_name,
		u.u_create_time,
		u.u_update_time
		FROM tb_role r 
		LEFT JOIN tb_organizations org ON r.org_id=org.org_id 
		LEFT JOIN tb_regions reg ON org.region_id=reg.region_id 
		LEFT JOIN tb_role_user ru ON r.r_id = ru.r_id 
		LEFT JOIN tb_user u ON ru.u_id = u.u_id
		 <where>
		 	<if test="regionid != null and regionid != ''">
				and r.region_id=#{regionid}
			</if>
			<if test="orgid != null and orgid != ''">
				and r.org_id=#{orgid}
			</if>
			<if test="name != null and name != ''">
				r.r_name like CONCAT('%',#{name},'%')
			</if>		
		</where>
	</select>
	
	<select id="findRoleQuery" parameterType="map" resultMap="roleMap" flushCache="true" useCache="true">
		SELECT r_id,org_id,region_id,r_name,r_key,r_status
		FROM tb_role 
		<where>
		    	and	r_status='Y'
			<if test="regionid!=null and regionid!=''">
				and region_id = #{regionid}
			</if>
			<if test="orgid!=null and orgid!=''">
				and org_id = #{orgid}
			</if>
		</where>
		ORDER BY region_id,org_id,r_id
	</select>
	
	<select id="findByName" parameterType="String" resultMap="roleMap" flushCache="true" useCache="true">
		<!-- SELECT 
		r.r_id,
		r.r_name,
		r.r_key,
		r.r_status,
		r.r_description,
		r.u_id,
		r.r_create_time,
		r.r_update_time,
		u.u_id,
		u.u_name,
		u.u_account_name,
		u.u_password,
		u.u_delete_status,
		u.u_locked,
		u.u_description,
		u.u_credentials_salt,
		u.u_creator_name,
		u.u_create_time,
		u.u_update_time
		FROM tb_role r LEFT JOIN tb_role_user ru ON r.r_id = ru.r_id LEFT JOIN tb_user u ON ru.u_id = u.u_id
		 -->
		 SELECT 
		reg.region_name,
		r.region_id,
		org.org_name,
		r.org_id,
		org.org_code,
		r.r_id,
		r.r_name,
		r.r_key,
		r.r_status,
		r.r_description,
		r.u_id,
		r.r_create_time,
		r.r_update_time,
		u.u_name,
		u.u_account_name,
		u.u_password,
		u.u_delete_status,
		u.u_locked,
		u.u_description,
		u.u_credentials_salt,
		u.u_creator_name,
		u.u_create_time,
		u.u_update_time
		FROM tb_role r 
		LEFT JOIN tb_organizations org ON r.org_id=org.org_id 
		LEFT JOIN tb_regions reg ON org.region_id=reg.region_id 
		LEFT JOIN tb_role_user ru ON r.r_id = ru.r_id 
		LEFT JOIN tb_user u ON ru.u_id = u.u_id
		 where r.r_name = #{name}
	</select>
	
	<select id="findByOrgId" parameterType="String" resultMap="roleMap" flushCache="true" useCache="true">
		SELECT 
		reg.region_name,
		r.region_id,
		org.org_name,
		r.org_id,
		org.org_code,
		r.r_id,
		r.r_name,
		r.r_key,
		r.r_status,
		r.r_description,
		r.u_id,
		r.r_create_time,
		r.r_update_time,
		u.u_name,
		u.u_account_name,
		u.u_password,
		u.u_delete_status,
		u.u_locked,
		u.u_description,
		u.u_credentials_salt,
		u.u_creator_name,
		u.u_create_time,
		u.u_update_time
		FROM tb_role r 
		LEFT JOIN tb_organizations org ON r.org_id=org.org_id 
		LEFT JOIN tb_regions reg ON org.region_id=reg.region_id 
		LEFT JOIN tb_role_user ru ON r.r_id = ru.r_id 
		LEFT JOIN tb_user u ON ru.u_id = u.u_id
		 where r.org_id = #{orgid}
	</select>
		
	<select id="findByNameAndOwner" resultMap="roleMap">
		<!-- SELECT 
		r.r_id,
		r.r_name,
		r.r_key,
		r.r_status,
		r.r_description,
		r.u_id,
		r.r_create_time,
		r.r_update_time,
		u.u_id,
		u.u_name,
		u.u_account_name,
		u.u_password,
		u.u_delete_status,
		u.u_locked,
		u.u_description,
		u.u_credentials_salt,
		u.u_creator_name,
		u.u_create_time,
		u.u_update_time
		FROM tb_role r LEFT JOIN tb_role_user ru ON r.r_id = ru.r_id LEFT JOIN tb_user u ON ru.u_id = u.u_id -->
		SELECT 
		reg.region_name,
		r.region_id,
		org.org_name,
		r.org_id,
		org.org_code,
		r.r_id,
		r.r_name,
		r.r_key,
		r.r_status,
		r.r_description,
		r.u_id,
		r.r_create_time,
		r.r_update_time,
		u.u_name,
		u.u_account_name,
		u.u_password,
		u.u_delete_status,
		u.u_locked,
		u.u_description,
		u.u_credentials_salt,
		u.u_creator_name,
		u.u_create_time,
		u.u_update_time
		FROM tb_role r 
		LEFT JOIN tb_organizations org ON r.org_id=org.org_id 
		LEFT JOIN tb_regions reg ON org.region_id=reg.region_id 
		LEFT JOIN tb_role_user ru ON r.r_id = ru.r_id 
		LEFT JOIN tb_user u ON ru.u_id = u.u_id
		where r.r_name = #{name} and r.u_id = {createUid}
	</select>
	
	<insert id="insert" parameterType="com.dcits.govsbu.sd.taxbankplatform.role.model.RoleEntity" useGeneratedKeys="true" keyProperty="id">
		insert ignore into tb_role (
			r_id,
			org_id,
			region_id,
			r_name,
			r_key,
			r_status,
			r_description,
			u_id,
			r_create_time
			)   
		values (
			#{id},
			#{orgid},
			#{regionid},
			#{name},
			#{key},
			#{status},
			#{description},
			#{createUid},
			now()
			)  
	</insert>
	
	
	<select id="findById" parameterType="String" resultMap="roleMap" flushCache="true" useCache="true">
		<!-- SELECT 
		r.r_id,
		r.r_name,
		r.r_key,
		r.r_status,
		r.r_description,
		r.u_id,
		r.r_create_time,
		r.r_update_time,
		u.u_id,
		u.u_name,
		u.u_account_name,
		u.u_password,
		u.u_delete_status,
		u.u_locked,
		u.u_description,
		u.u_credentials_salt,
		u.u_creator_name,
		u.u_create_time,
		u.u_update_time
		FROM tb_role r LEFT JOIN tb_role_user ru ON r.r_id = ru.r_id LEFT JOIN tb_user u ON ru.u_id = u.u_id -->
		SELECT 
		reg.region_name,
		r.region_id,
		org.org_name,
		r.org_id,
		org.org_code,
		r.r_id,
		r.r_name,
		r.r_key,
		r.r_status,
		r.r_description,
		r.u_id,
		r.r_create_time,
		r.r_update_time,
		u.u_name,
		u.u_account_name,
		u.u_password,
		u.u_delete_status,
		u.u_locked,
		u.u_description,
		u.u_credentials_salt,
		u.u_creator_name,
		u.u_create_time,
		u.u_update_time
		FROM tb_role r 
		LEFT JOIN tb_organizations org ON r.org_id=org.org_id 
		LEFT JOIN tb_regions reg ON org.region_id=reg.region_id 
		LEFT JOIN tb_role_user ru ON r.r_id = ru.r_id 
		LEFT JOIN tb_user u ON ru.u_id = u.u_id
		where r.r_id = #{id}
	</select>
	
	<update id="update" parameterType="com.dcits.govsbu.sd.taxbankplatform.role.model.RoleEntity" flushCache="true">
		update tb_role
		<set>
			<if test="name != null and name != ''">
				r_name = #{name},
			</if>
			<if test="key != null and key != ''">
				r_key = #{key},
			</if>
			<if test="status != null and status != ''">
				r_status = #{status},
			</if>
			<if test="description != null and description != ''">
				r_description = #{description}
			</if>
			<if test="creatorid != null and creatorid != ''" >
	        	creatorid = #{creatorid},
	      	</if>
	      	<if test="createtime != null and createtime != ''" >
	        	createtime = #{createtime},
	      	</if>
	      	<if test="updatorid != null and updatorid != ''" >
	        	updatorid = #{updatorid},
	      	</if>
	      	<if test="updatetime != null and updatetime != ''" >
	        	updatetime = now()
	      	</if>
		</set>
		where r_id = #{id}
	</update>
	
	<delete id="deleteBatchById" parameterType="list">
       delete from tb_role where r_id in  
	    <foreach collection="list" item = "id" open="(" separator="," close=")">
	    #{id}  
	    </foreach>  
	</delete>
	
	<delete id="deleteRoleResource" parameterType="String">
       delete from tb_resources_role where r_id = #{roleId}   
	</delete>
		
	<select id="findRoleResourceById" parameterType="String" resultType="int" flushCache="true" useCache="true">
		SELECT count(*)
		FROM tb_resources_role
		where r_id = #{roleId}
	</select>
	
	<insert id="addRoleResource" parameterType="map" useGeneratedKeys="true" keyProperty="id">
		insert ignore into tb_resources_role (
			s_id,
			r_id,
			t_create_time
		)   
		values 
		<foreach collection="resourceIds" item ="resourceId" separator=",">
			(
				#{resourceId},
				#{roleId},
				now()
			)
		</foreach>
	</insert>
	
</mapper>